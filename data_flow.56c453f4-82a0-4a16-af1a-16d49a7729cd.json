{"metadata":{"asset_id":"56c453f4-82a0-4a16-af1a-16d49a7729cd","asset_attributes":["data_flow"],"name":"Sensor_data_from_mine_xyz.csv_flow","asset_type":"data_flow","created_at":"2021-08-21T13:10:36Z","description":"","origin_country":"us","owner_id":"IBMid-664002F26S","project_id":"3ea50104-9c76-40be-9434-9385502187c3","size":0,"tags":[],"usage":{"last_update_time":1629562085755,"last_updated_at":"2021-08-21T16:08:05Z"}},"entity":{"data_flow":{"pipeline":{"version":"1.0","doc_type":"pipeline","app_data":{"shaperCreated":true,"replace_space_by_dot":true},"primary_pipeline":"pipeline1","pipelines":[{"id":"pipeline1","nodes":[{"output":{"id":"source1output"},"data_asset":{"ref":"c4ffe46f-0192-42bb-a4d8-c2240ed3f747","app_data":{"dataset_name":"Sensor_data_from_mine_xyz.csv"},"properties":{"first_line_header":"true","encoding":"UTF-8","invalid_data_handling":"fail","file_format":"csv"}},"id":"source1","type":"binding"},{"op":"com.ibm.wdp.transformer.FreeformCode","id":"851a49cf-1a5f-4738-b4eb-fca9a6be9048","type":"execution_node","app_data":{"uiParams":{"key":"mutate","code":"mutate(`% Iron Feed` = readr::parse_number(as.character(`% Iron Feed`), locale = readr::locale(decimal_mark = \",\" )),`date` = as.POSIXct(lubridate::parse_date_time(`date`, orders = c('ymdHMS','ymdHM','ydmHMS','ydmHM'),quiet = TRUE)),`% Silica Feed` = readr::parse_number(as.character(`% Silica Feed`), locale = readr::locale(decimal_mark = \",\" )),`Starch Flow` = readr::parse_number(as.character(`Starch Flow`), locale = readr::locale(decimal_mark = \",\" )),`Amina Flow` = readr::parse_number(as.character(`Amina Flow`), locale = readr::locale(decimal_mark = \",\" )),`Ore Pulp Flow` = readr::parse_number(as.character(`Ore Pulp Flow`), locale = readr::locale(decimal_mark = \",\" )),`Ore Pulp pH` = readr::parse_number(as.character(`Ore Pulp pH`), locale = readr::locale(decimal_mark = \",\" )),`Ore Pulp Density` = readr::parse_number(as.character(`Ore Pulp Density`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 01 Air Flow` = readr::parse_number(as.character(`Flotation Column 01 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 02 Air Flow` = readr::parse_number(as.character(`Flotation Column 02 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 03 Air Flow` = readr::parse_number(as.character(`Flotation Column 03 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 04 Air Flow` = readr::parse_number(as.character(`Flotation Column 04 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 05 Air Flow` = readr::parse_number(as.character(`Flotation Column 05 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 06 Air Flow` = readr::parse_number(as.character(`Flotation Column 06 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 07 Air Flow` = readr::parse_number(as.character(`Flotation Column 07 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 01 Level` = readr::parse_number(as.character(`Flotation Column 01 Level`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 02 Level` = readr::parse_number(as.character(`Flotation Column 02 Level`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 03 Level` = readr::parse_number(as.character(`Flotation Column 03 Level`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 04 Level` = readr::parse_number(as.character(`Flotation Column 04 Level`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 05 Level` = readr::parse_number(as.character(`Flotation Column 05 Level`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 06 Level` = readr::parse_number(as.character(`Flotation Column 06 Level`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 07 Level` = readr::parse_number(as.character(`Flotation Column 07 Level`), locale = readr::locale(decimal_mark = \",\" )),`% Iron Concentrate` = readr::parse_number(as.character(`% Iron Concentrate`), locale = readr::locale(decimal_mark = \",\" )),`% Silica Concentrate` = readr::parse_number(as.character(`% Silica Concentrate`), locale = readr::locale(decimal_mark = \",\" )))","args":{"type":"mutate","conditions":[{"removeColumn":false,"newColumnName":"","actualType":"String","groupingMarker":"","decimalMarker":".","column":"% Iron Feed","format":"","type":"as.double"}],"auto":true,"autoConditions":[{"column":"date","type":"to_timestamp","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"% Iron Feed","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"% Silica Feed","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Starch Flow","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Amina Flow","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Ore Pulp Flow","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Ore Pulp pH","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Ore Pulp Density","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 01 Air Flow","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 02 Air Flow","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 03 Air Flow","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 04 Air Flow","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 05 Air Flow","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 06 Air Flow","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 07 Air Flow","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 01 Level","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 02 Level","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 03 Level","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 04 Level","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 05 Level","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 06 Level","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"Flotation Column 07 Level","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"% Iron Concentrate","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false},{"column":"% Silica Concentrate","type":"as.double","newColumnName":"","format":"","actualType":"character","removeColumn":false}],"autoDecimalSymbol":",","autoGroupingSymbol":"","version":4}}},"parameters":{"FREEFORM_CODE":"spark_apply(function(df) dplyr::mutate(df, `% Iron Feed` = readr::parse_number(as.character(`% Iron Feed`), locale = readr::locale(decimal_mark = \",\" )),`date` = as.POSIXct(lubridate::parse_date_time(`date`, orders = c('ymdHMS','ymdHM','ydmHMS','ydmHM'),quiet = TRUE)),`% Silica Feed` = readr::parse_number(as.character(`% Silica Feed`), locale = readr::locale(decimal_mark = \",\" )),`Starch Flow` = readr::parse_number(as.character(`Starch Flow`), locale = readr::locale(decimal_mark = \",\" )),`Amina Flow` = readr::parse_number(as.character(`Amina Flow`), locale = readr::locale(decimal_mark = \",\" )),`Ore Pulp Flow` = readr::parse_number(as.character(`Ore Pulp Flow`), locale = readr::locale(decimal_mark = \",\" )),`Ore Pulp pH` = readr::parse_number(as.character(`Ore Pulp pH`), locale = readr::locale(decimal_mark = \",\" )),`Ore Pulp Density` = readr::parse_number(as.character(`Ore Pulp Density`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 01 Air Flow` = readr::parse_number(as.character(`Flotation Column 01 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 02 Air Flow` = readr::parse_number(as.character(`Flotation Column 02 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 03 Air Flow` = readr::parse_number(as.character(`Flotation Column 03 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 04 Air Flow` = readr::parse_number(as.character(`Flotation Column 04 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 05 Air Flow` = readr::parse_number(as.character(`Flotation Column 05 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 06 Air Flow` = readr::parse_number(as.character(`Flotation Column 06 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 07 Air Flow` = readr::parse_number(as.character(`Flotation Column 07 Air Flow`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 01 Level` = readr::parse_number(as.character(`Flotation Column 01 Level`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 02 Level` = readr::parse_number(as.character(`Flotation Column 02 Level`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 03 Level` = readr::parse_number(as.character(`Flotation Column 03 Level`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 04 Level` = readr::parse_number(as.character(`Flotation Column 04 Level`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 05 Level` = readr::parse_number(as.character(`Flotation Column 05 Level`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 06 Level` = readr::parse_number(as.character(`Flotation Column 06 Level`), locale = readr::locale(decimal_mark = \",\" )),`Flotation Column 07 Level` = readr::parse_number(as.character(`Flotation Column 07 Level`), locale = readr::locale(decimal_mark = \",\" )),`% Iron Concentrate` = readr::parse_number(as.character(`% Iron Concentrate`), locale = readr::locale(decimal_mark = \",\" )),`% Silica Concentrate` = readr::parse_number(as.character(`% Silica Concentrate`), locale = readr::locale(decimal_mark = \",\" ))))"},"inputs":[{"id":"inputPort1","links":[{"node_id_ref":"source1","port_id_ref":"source1output"}]}],"outputs":[{"id":"outputPort1"}]},{"op":"com.ibm.wdp.transformer.FreeformCode","id":"dfeaa446-47e8-45eb-8a05-451a24e4f70b","type":"execution_node","app_data":{"uiParams":{"key":"sort-descending","code":"arrange(desc(`date`))","args":{"column":"date","key":"sort-descending"}}},"parameters":{"FREEFORM_CODE":"arrange(desc(`date`))"},"inputs":[{"id":"inputPort1","links":[{"node_id_ref":"851a49cf-1a5f-4738-b4eb-fca9a6be9048","port_id_ref":"outputPort1"}]}],"outputs":[{"id":"outputPort2"}]},{"id":"8dcecedd-eb9b-456a-8c5c-83d7684b8faa","type":"execution_node","op":"com.ibm.wdp.transformer.FreeformCode","app_data":{"uiParams":{"key":"freeform-code","code":"group_by(`% Silica Concentrate`)"}},"parameters":{"FREEFORM_CODE":"group_by(`% Silica Concentrate`)"},"inputs":[{"id":"inputPort1","links":[{"node_id_ref":"dfeaa446-47e8-45eb-8a05-451a24e4f70b","port_id_ref":"outputPort2"}]}],"outputs":[{"id":"outputPort3"}]},{"input":{"link":{"node_id_ref":"8dcecedd-eb9b-456a-8c5c-83d7684b8faa","port_id_ref":"outputPort3"},"id":"targetInput1"},"data_asset":{"project_ref":"3ea50104-9c76-40be-9434-9385502187c3","app_data":{"targetType":"dataAsset","project_name":"LUNGENIA"},"properties":{"mode":"overwrite","name":"Sensor_data_from_mine_xyz_csv_shaped","first_line_header":true,"file_format":"csv"}},"id":"target1","type":"binding"}],"runtime":"Spark"}],"id":"e29ed170-b13f-46ea-9a05-23b29afcf90e"},"_entity_only":true}}}
